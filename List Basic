#include <stdio.h>
#define MAX_LIST_SIZE 10

typedef int element;

typedef struct arraylisttype
{
	element array[MAX_LIST_SIZE];
	int size;
} arraylisttype;

void init(arraylisttype* L)
{
	L->size = 0;
}

int full(arraylisttype* L)
{
	return L->size == MAX_LIST_SIZE;
}

void insert(arraylisttype* L, int pos, element item)
{
	if (!full(L) && pos >= 0 && pos <= L->size)
	{
		for (int i = (L->size - 1); i >= pos; i--)
		{
			L->array[i + 1] = L->array[i];
		}
		L->array[pos] = item;
		L->size++; 
	}
}

void print(arraylisttype* L)
{
	for (int i = 0; i < L->size; i++)
	{
		printf("%3d->", L->array[i]);
	}
	printf("\n");
}

element del(arraylisttype* L, int pos)
{
	element item;
	if (pos < 0 || pos >= L->size)
	{
		printf("List is empty\n");
	}
	item = L->array[pos];
	for (int i = pos; i < (L->size - 1); i++)
	{
		L->array[i] = L->array[i + 1];
	}
	L->size--;
	return item;
}

int main()
{
	arraylisttype list;
	init(&list);
	insert(&list, 0, 10);
	insert(&list, 0, 20);
	insert(&list, 0, 30);
	print(&list);
	element data = del(&list, 0);
	printf("deleted data is : %3d\n", data);
	print(&list);
	return 0;
}
