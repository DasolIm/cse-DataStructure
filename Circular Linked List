#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>

typedef int element;
typedef struct listnode
{
	element data;
	struct listnode* link;
} listnode;

listnode* insert_first(listnode* head, element data)
{
	listnode* node = (listnode*)malloc(sizeof(listnode));
	node->data = data;
	if (head == NULL)
	{
		head = node;
		node->link = head;
	}
	else
	{
		node->link = head->link;
		head->link = node;
	}
	return head;
}

listnode* insert_last(listnode* head, element data)
{
	listnode* node = (listnode*)malloc(sizeof(listnode));
	node->data = data;
	if (head == NULL)
	{
		head = node;
		node->link = head;
	}
	else
	{
		node->link = head->link;
		head->link = node;
		head = node;
	}
	return head;
}

listnode* delete_first(listnode* head)
{
	listnode* removed = head;
	if (head == NULL) return NULL;
	head = removed->link;
	free(removed);
	return head;
}

void print_list(listnode* head)
{
	listnode* p;
	if (head == NULL) return;
	p = head->link;
	do
	{
		printf("%d->", p->data);
		p = p->link;
	} while (p != head);
	printf("%d->", p->data);
}

int main()
{
	listnode* head = NULL;

	//list = 10->20->30->40
	head = insert_last(head, 20);
	head = insert_last(head, 30);
	head = insert_last(head, 40);
	head = insert_first(head, 10);
	print_list(head);

	return 0;
}
